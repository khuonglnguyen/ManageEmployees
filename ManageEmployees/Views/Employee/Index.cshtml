@*@model IEnumerable<ManageEmployees.Entities.Employee>*@

@{
    ViewData["Title"] = "Manage Employees";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h1>
    Manage <b>Employees</b>
    @{
        if (User.FindFirst("role")?.Value == "admin")
        {
            <button type="button" class="btn btn-success ms-4" style="float:right;" data-bs-toggle="modal" data-bs-target="#addnew"><i class="fa fa-plus-circle"></i> Add New Employee</button>
        }
    }
</h1>

<table class="table" id="table" style="width:1300px;">
    @*<thead>
    <tr>
    <th></th>
    </tr>
    </thead>*@
</table>
<div class="modal fade" id="addnew" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Add Employee</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form asp-action="create" method="post">
                    <div class="mb-3">
                        <label for="name" class="col-form-label">Name:</label>
                        <input type="text" class="form-control" id="name" name="Name" required>
                    </div>
                    <div class="mb-3">
                        <label for="email" class="col-form-label">Email:</label>
                        <input type="email" class="form-control" id="email" name="Email" required>
                    </div>
                    <div class="mb-3">
                        <label for="address" class="col-form-label">Address:</label>
                        <textarea class="form-control" id="address" name="address" required></textarea>
                    </div>
                    <div class="mb-3">
                        <label for="phone" class="col-form-label">Phone:</label>
                        <input type="text" class="form-control" id="phone" name="phone" required>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-success">Add</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="modal fade" id="remove" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Delete Employee</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="mess">
                Are you sure you want to delete these Records?
                <p class="text-warning">This action cannot be undone.</p>
            </div>
            <div class="modal-footer" id="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger" id="submit">Delete</button>
            </div>
        </div>
    </div>
</div>
<script>
    var id = 0;

    $(document).ready(function () {
    @{
        if (User.FindFirst("role")?.Value == "admin")
        {
            <text>
                    var t = $('#table').DataTable({
                        processing: true,
                        serverSide: false,
                        search: true,
                        paging: true,
                        width: 1000,
                        info: true,
                        ajax: 'Employee/GetAll',
                        columns: [
                            { title: 'No', data: 'name' },
                            { title: 'Name', data: 'name' },
                            { title: 'Email', data: 'email' },
                            { title: 'Address', data: 'address' },
                            { title: 'Phone', data: 'phone' },
                            {
                                title: 'Actions',
                                data: '',
                                render: (data, type, row) => {
                                    return `<button type="button" class="btn text-danger delete" data-bs-toggle="modal" data-id="${row.id}" data-bs-target="#remove" onclick="SetId(this)"><i class="fa fa-trash"></i></button>`;
                                }
                            }
                        ],
                    });

                t.on('order.dt search.dt', function () {
                    let i = 1;

                    t.cells(null, 0, { search: 'applied', order: 'applied' }).every(function (cell) {
                        this.data(i++);
                    });
                }).draw();
            </text>
        }
        else
        {
            <text>
                        var t = $('#table').DataTable({
                        processing: true,
                        serverSide: false,
                        search: true,
                        paging: true,
                        width: 1000,
                        info: true,
                        ajax: 'Employee/GetAll',
                        columns: [
                            { title: 'No', data: 'name' },
                            { title: 'Name', data: 'name' },
                            { title: 'Email', data: 'email' },
                            { title: 'Address', data: 'address' },
                            { title: 'Phone', data: 'phone' },
                        ],
                        order: [[1, 'asc']],
                    });

                t.on('order.dt search.dt', function () {
                    let i = 1;

                    t.cells(null, 0, { search: 'applied', order: 'applied' }).every(function (cell) {
                        this.data(i++);
                    });
                }).draw();
            </text>
        }
    }
            document.getElementById("submit").addEventListener("click", function () {
                $.ajax({
                    url: "/Employee/Delete?id=" + id,
                    type: 'POST',
                    dataType: "text",
                    success: function (data) {
                        $.notify("Delete successfully!", "success");
                        $('#remove').modal('hide');
                        $('#table').DataTable().ajax.reload();
                    },
                    error: function (data) {
                        $.notify("Error, Please try again!", "error");
                        $('#remove').modal('hide');
                    }
                });
            });

        $("#addnew").on('submit', function (e) {
            e.preventDefault();

            var name = $("#name")
            var email = $("#email")
            var address = $("#address")
            var phone = $("#phone")

            $.ajax({
                url: "/Employee/Create/",
                type: 'POST',
                dataType: "text",
                data: { Name: name.val(), Email: email.val(), Address: address.val(), Phone: phone.val() },
                success: function (data) {
                    name.val('')
                    email.val('')
                    address.val('')
                    phone.val('')

                    $.notify("Added successfully!", "success");
                    $('#addnew').modal('hide');
                    $('#table').DataTable().ajax.reload();
                },
                error: function (data) {
                    $.notify("Error, Please try again!", "error");
                    $('#remove').modal('hide');
                }
            });
        });
    });
    function SetId(e) {
        id = e.attributes["data-id"].nodeValue;
    }
</script>